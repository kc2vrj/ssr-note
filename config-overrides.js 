const webpack = require('webpack');

module.exports = function override(config, env) {
  config.resolve.fallback = {
    ...config.resolve.fallback,
    "util": require.resolve("util/"),
    "stream": require.resolve("stream-browserify"),
    "crypto": require.resolve("crypto-browserify"),
    "url": require.resolve("url/"),
    "assert": require.resolve("assert/"),
    "os": require.resolve("os-browserify/browser"),
    "https": require.resolve("https-browserify"),
    "querystring": require.resolve("querystring-es3"),
    "zlib": require.resolve("browserify-zlib"),
    "timers": require.resolve("timers-browserify"),
    "http": require.resolve("stream-http"),
    "fs": false, // Use an empty module fallback for 'fs'
  };

  config.plugins.push(
    new webpack.ProvidePlugin({
      process: 'process/browser',
      Buffer: ['buffer', 'Buffer'],
    })
  );

  config.externals = {
    kerberos: "kerberos",
    "@mongodb-js/zstd": "@mongodb-js/zstd",
    "@aws-sdk/credential-providers": "@aws-sdk/credential-providers",
    snappy: "snappy",
    socks: "socks",
    aws4: "aws4",
    "mongodb-client-encryption": "mongodb-client-encryption"
  };

  return config;
}